@model BlogMvc.Web.Models.Post
@using BlogMvc.Web.Models;
@{
    ViewBag.Title = "Blog | Admin panel";
}

<h1>Create post</h1>

<p><a href="@Url.Action("Index")">< Back to posts</a></p>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    @Html.ValidationSummary(true)
    

    <div class="row">
        <div class="col-md-6">
            <div class="form-group required">
                @Html.LabelFor(model => model.Name)
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name)
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.Slug)
                @Html.EditorFor(model => model.Slug, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Slug)
            </div>
        </div>
    </div>



    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.Category_Id, "Category_Id")
                @*@Html.DropDownList(Model.Category_Id.ToString(), (SelectList)ViewBag.Category_Id, new { @class = "form-control", @id = "Category_Id", @name = "Category_Id" })*@
                @Html.DropDownList("Category_Id", string.Empty)
                @Html.ValidationMessageFor(model => model.Category_Id)
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.User_Id, "User_Id")
                @*@Html.DropDownList(Model.User_Id.ToString(), (SelectList)ViewBag.User_Id,  new { @class = "form-control" })*@
                @Html.DropDownList("User_Id", string.Empty)
                @Html.ValidationMessageFor(model => model.User_Id)
            </div>
        </div>
    </div>




    <div class="form-group required">
        @Html.LabelFor(model => model.Content, new { @class = "control-label col-md-2" })
        @Html.TextAreaFor(model => model.Content, new { @class = "form-control", @cols = 30, @rows = 6 })
        @Html.ValidationMessageFor(model => model.Content)
    </div>



    <div class="submit">
        <input type="submit" value="Create" class="btn btn-primary" />
    </div>
}



<script type="text/javascript">
    //It seems to be a bug with DropDownList function when you use htmlAttributes to set css class
    //Therefore, selectedValue is not working anymore
    //So i chose to keep the defaut parameters and to add the css class with javascript
    $('select').each(function (i, item) {
        $(item).addClass("form-control");
    })
</script>

